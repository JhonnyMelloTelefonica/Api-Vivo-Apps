// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Api_Vivo_Apps.DataGRC
{
    public partial class Vivo_MAISContext : DbContext
    {
        public Vivo_MAISContext()
        {
        }

        public Vivo_MAISContext(DbContextOptions<Vivo_MAISContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AG_CREDENCIADOS_HISTORICA> AG_CREDENCIADOS_HISTORICAs { get; set; }
        public virtual DbSet<AG_CREDENCIADOS_Original> AG_CREDENCIADOS_Originals { get; set; }
        public virtual DbSet<AG_CREDENCIADOS_PARCIAL> AG_CREDENCIADOS_PARCIALs { get; set; }
        public virtual DbSet<ATV_HISTORICO_IMEI> ATV_HISTORICO_IMEIs { get; set; }
        public virtual DbSet<BASE_ATV_NOVO_> BASE_ATV_NOVO_s { get; set; }
        public virtual DbSet<CADASTRO_ASSOCIACAO_FDV> CADASTRO_ASSOCIACAO_FDVs { get; set; }
        public virtual DbSet<CADASTRO_ASSOCIACAO_FDV_AGOSTO> CADASTRO_ASSOCIACAO_FDV_AGOSTOs { get; set; }
        public virtual DbSet<CADASTRO_ASSOCIACAO_FDV_BKP> CADASTRO_ASSOCIACAO_FDV_BKPs { get; set; }
        public virtual DbSet<CADASTRO_ASSOCIACAO_FDV_DEZEMBRO> CADASTRO_ASSOCIACAO_FDV_DEZEMBROs { get; set; }
        public virtual DbSet<CADASTRO_GERENTE_CONTA> CADASTRO_GERENTE_CONTAs { get; set; }
        public virtual DbSet<CADASTRO_GERENTE_TERRITORIO> CADASTRO_GERENTE_TERRITORIOs { get; set; }
        public virtual DbSet<CADASTRO_NOME_REDE> CADASTRO_NOME_REDEs { get; set; }
        public virtual DbSet<CADASTRO_PDV> CADASTRO_PDVs { get; set; }
        public virtual DbSet<CADASTRO_PDV_COMPLEMENTO_AUX> CADASTRO_PDV_COMPLEMENTO_AUXes { get; set; }
        public virtual DbSet<CADASTRO_X_VIVO_SIM> CADASTRO_X_VIVO_SIMs { get; set; }
        public virtual DbSet<CADASTRO_X_VIVO_SIM_X_CANAL> CADASTRO_X_VIVO_SIM_X_CANALs { get; set; }
        public virtual DbSet<CARTEIRA_CADASTRO_GERAL_PDV> CARTEIRA_CADASTRO_GERAL_PDVs { get; set; }
        public virtual DbSet<CNS_CADASTRO_GERAL_PDV> CNS_CADASTRO_GERAL_PDVs { get; set; }
        public virtual DbSet<CNS_CARTEIRA_DASHBOARD> CNS_CARTEIRA_DASHBOARDs { get; set; }
        public virtual DbSet<CNS_GERENTE_CONTAS_ATIVO> CNS_GERENTE_CONTAS_ATIVOs { get; set; }
        public virtual DbSet<CNS_GERENTE_TERRITORIO_ATIVO> CNS_GERENTE_TERRITORIO_ATIVOs { get; set; }
        public virtual DbSet<CNS_HIERARQUIA_CAMPANHA> CNS_HIERARQUIA_CAMPANHAs { get; set; }
        public virtual DbSet<CNS_VIVO_ADIANTE> CNS_VIVO_ADIANTEs { get; set; }
        public virtual DbSet<DE_PARA_DDD_NACIONAL> DE_PARA_DDD_NACIONALs { get; set; }
        public virtual DbSet<ENVIO_CARTEIRA> ENVIO_CARTEIRAs { get; set; }
        public virtual DbSet<HEADCOUNT_LLPP> HEADCOUNT_LLPPs { get; set; }
        public virtual DbSet<LOJAS_SCA_360> LOJAS_SCA_360s { get; set; }
        public virtual DbSet<PERFIS_DANI> PERFIS_DANIs { get; set; }
        public virtual DbSet<REDES_NACIONAI> REDES_NACIONAIs { get; set; }
        public virtual DbSet<REGISTRO_DIVISAO> REGISTRO_DIVISAOs { get; set; }
        public virtual DbSet<TAB_AG_CREDENCIADOS_DESCOBRE_PDV> TAB_AG_CREDENCIADOS_DESCOBRE_PDVs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_ADMINISTRATIVO> TAB_CADASTRO_GERAL_PDVS_ADMINISTRATIVOs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_COMERCIAL> TAB_CADASTRO_GERAL_PDVS_COMERCIALs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_COMPLETO> TAB_CADASTRO_GERAL_PDVS_COMPLETOs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAI> TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_2> TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_2s { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_AUX> TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_AUXes { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_LLPP> TAB_CADASTRO_GERAL_PDVS_LLPPs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_OUTRAS_REGIONAIS_BKP> TAB_CADASTRO_GERAL_PDVS_OUTRAS_REGIONAIS_BKPs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_SELL_IN> TAB_CADASTRO_GERAL_PDVS_SELL_INs { get; set; }
        public virtual DbSet<TAB_CADASTRO_GERAL_PDVS_USUARIO_VIVO_SIM> TAB_CADASTRO_GERAL_PDVS_USUARIO_VIVO_SIMs { get; set; }
        public virtual DbSet<TAB_CANAIS_RESUMO> TAB_CANAIS_RESUMOs { get; set; }
        public virtual DbSet<TAB_COLABORADORES_LLPP> TAB_COLABORADORES_LLPPs { get; set; }
        public virtual DbSet<TAB_DE_PARA_ADABAS_LOJAS_PROPRIA> TAB_DE_PARA_ADABAS_LOJAS_PROPRIAs { get; set; }
        public virtual DbSet<TAB_LOGRADOUROS_E_CLASSIFICAÇÃO> TAB_LOGRADOUROS_E_CLASSIFICAÇÃOs { get; set; }
        public virtual DbSet<TAB_MAN_GERENTE_CONTA_AUDITORIum> TAB_MAN_GERENTE_CONTA_AUDITORIAs { get; set; }
        public virtual DbSet<TAB_MAN_GERENTE_CONTum> TAB_MAN_GERENTE_CONTAs { get; set; }
        public virtual DbSet<TAB_PESSOA> TAB_PESSOAs { get; set; }
        public virtual DbSet<VIEW_GERENTE_CONTA> VIEW_GERENTE_CONTAs { get; set; }
        public virtual DbSet<VIEW_GERENTE_TERRITORIAL> VIEW_GERENTE_TERRITORIALs { get; set; }
        public virtual DbSet<VIEW_GERENTE_TERRITORIO> VIEW_GERENTE_TERRITORIOs { get; set; }
        public virtual DbSet<VIEW_VIVO_GRC_AG_CREDENCIADOS_DESCOBRE_PDV> VIEW_VIVO_GRC_AG_CREDENCIADOS_DESCOBRE_PDVs { get; set; }
        public virtual DbSet<ZS118_NOTE_10> ZS118_NOTE_10s { get; set; }
        public virtual DbSet<fat_SET_> fat_SET_s { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=10.124.100.153;Initial Catalog=Vivo_GRC;User ID=RegionalNE;Password=RegionalNEvivo2019;TrustServerCertificate=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Latin1_General_CI_AS");

            modelBuilder.Entity<AG_CREDENCIADOS_HISTORICA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AG_CREDENCIADOS_HISTORICA");

                entity.Property(e => e.CEP_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.CNTR_DSTR)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ALVO).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CLI_SAP).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CREDENC)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.COD_CREDOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_ENT_VEND).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_GESTOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_SIT_CML)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.COMPL_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.DAT_FIM_ENT).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI_ENT).HasColumnType("datetime");

                entity.Property(e => e.DES_ACTIV).HasMaxLength(255);

                entity.Property(e => e.DES_GEN_ENT).HasMaxLength(255);

                entity.Property(e => e.DES_REG)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SEC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SIT_CML).HasMaxLength(255);

                entity.Property(e => e.DOM_FISCAL).HasMaxLength(255);

                entity.Property(e => e.DT_CADASTRO)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ESCV)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_BAIRRO).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT_ABR).HasMaxLength(255);

                entity.Property(e => e.NOME_GESTOR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOCAL).HasMaxLength(255);

                entity.Property(e => e.NOME_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.NOM_CASC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_CGC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NUM_INSCR_EST)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.OBS)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIP_LOGRAD)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AG_CREDENCIADOS_Original>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AG_CREDENCIADOS_Original");

                entity.Property(e => e.CEP_LOGRAD)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CNTR_DSTR)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ALVO).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CLI_SAP).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CREDENC)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.COD_CREDOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_ENT_VEND).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_GESTOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_SIT_CML)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.COMPL_LOGRAD)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DAT_FIM_ENT).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI_ENT).HasColumnType("datetime");

                entity.Property(e => e.DES_ACTIV)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_GEN_ENT)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SEC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SIT_CML)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DOM_FISCAL)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ESCV)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_BAIRRO)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_ENT)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_ENT_ABR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_GESTOR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOCAL)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOGRAD)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NOM_CASC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_CGC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NUM_INSCR_EST)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_LOGRAD)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.OBS)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIP_LOGRAD)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AG_CREDENCIADOS_PARCIAL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AG_CREDENCIADOS_PARCIAL");

                entity.Property(e => e.CEP_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.CNTR_DSTR)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ALVO).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CLI_SAP).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CREDENC)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.COD_CREDOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_ENT_VEND).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_GESTOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_SIT_CML)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.COMPL_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.DAT_FIM_ENT).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI).HasColumnType("datetime");

                entity.Property(e => e.DAT_INI_ENT).HasColumnType("datetime");

                entity.Property(e => e.DES_ACTIV).HasMaxLength(255);

                entity.Property(e => e.DES_GEN_ENT).HasMaxLength(255);

                entity.Property(e => e.DES_REG)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SEC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SIT_CML).HasMaxLength(255);

                entity.Property(e => e.DOM_FISCAL).HasMaxLength(255);

                entity.Property(e => e.DS_CNL_PNTO_VNDA).HasMaxLength(255);

                entity.Property(e => e.DT_CADASTRO).HasColumnType("datetime");

                entity.Property(e => e.ESCV)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_BAIRRO).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT_ABR).HasMaxLength(255);

                entity.Property(e => e.NOME_GESTOR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOCAL).HasMaxLength(255);

                entity.Property(e => e.NOME_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.NOM_CASC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_CGC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NUM_INSCR_EST)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_LOGRAD).HasMaxLength(255);

                entity.Property(e => e.OBS)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIP_LOGRAD)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ATV_HISTORICO_IMEI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ATV_HISTORICO_IMEI");

                entity.Property(e => e.SAP_CPF_CNPJ)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BASE_ATV_NOVO_>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BASE_ATV_NOVO_");

                entity.Property(e => e.AGRP_MVMT_LNHA).HasMaxLength(255);

                entity.Property(e => e.AREA_REGISTRO).HasMaxLength(255);

                entity.Property(e => e.ATIVIDADE).HasMaxLength(255);

                entity.Property(e => e.ATVD_CNL).HasMaxLength(255);

                entity.Property(e => e.CANAL_FATURAMENTO).HasMaxLength(255);

                entity.Property(e => e.CATEGORIA).HasMaxLength(255);

                entity.Property(e => e.CD).HasMaxLength(255);

                entity.Property(e => e.CD_COND_PGTO).HasMaxLength(255);

                entity.Property(e => e.CD_CRDN).HasMaxLength(255);

                entity.Property(e => e.CD_DOCT_FTRM).HasMaxLength(255);

                entity.Property(e => e.CD_MTRL).HasMaxLength(255);

                entity.Property(e => e.CD_ORDM_VNDA).HasMaxLength(255);

                entity.Property(e => e.CD_PLNO_SIST_ORIG).HasMaxLength(255);

                entity.Property(e => e.CD_TIPO_ORDM_VNDA).HasMaxLength(255);

                entity.Property(e => e.CD_TIPO_PDDO).HasMaxLength(255);

                entity.Property(e => e.CENT).HasMaxLength(255);

                entity.Property(e => e.CEP_PDV).HasMaxLength(255);

                entity.Property(e => e.CLASSIF_CATEGORIA).HasMaxLength(255);

                entity.Property(e => e.CLASSIF_DIFERIMENTO).HasMaxLength(255);

                entity.Property(e => e.CLASS_CLUSTER).HasMaxLength(255);

                entity.Property(e => e.CLASS_DEALER).HasMaxLength(255);

                entity.Property(e => e.CNPJ_PDV).HasMaxLength(255);

                entity.Property(e => e.CPF_CLIENTE).HasMaxLength(255);

                entity.Property(e => e.DATA_NF).HasColumnType("datetime");

                entity.Property(e => e.DEPOSITO).HasMaxLength(255);

                entity.Property(e => e.DESC_CAMP).HasMaxLength(255);

                entity.Property(e => e.DESC_CLASSIF_DOA).HasMaxLength(255);

                entity.Property(e => e.DESC_CLASSIF_PED).HasMaxLength(255);

                entity.Property(e => e.DESC_FLAG_FONTE).HasMaxLength(255);

                entity.Property(e => e.DS_PLNO).HasMaxLength(255);

                entity.Property(e => e.DS_PLTF).HasMaxLength(255);

                entity.Property(e => e.DS_SIST_PGTO).HasMaxLength(255);

                entity.Property(e => e.DS_TIPO_MVMT_LNHA).HasMaxLength(255);

                entity.Property(e => e.DT_MVMT_LNHA).HasColumnType("datetime");

                entity.Property(e => e.DT_REF_PAGAMENTO).HasColumnType("datetime");

                entity.Property(e => e.FABRICANTE).HasMaxLength(255);

                entity.Property(e => e.FLAG_ATIVADO).HasMaxLength(255);

                entity.Property(e => e.FLAG_DESCONTO_MANUAL).HasMaxLength(255);

                entity.Property(e => e.FLAG_FCDI).HasMaxLength(255);

                entity.Property(e => e.FLAG_FDLZ).HasMaxLength(255);

                entity.Property(e => e.FLAG_POLITICA_SCORE).HasMaxLength(255);

                entity.Property(e => e.FLAG_RENOVA).HasMaxLength(255);

                entity.Property(e => e.FLAG_VENHA_SER_VIVO).HasMaxLength(255);

                entity.Property(e => e.GAMA).HasMaxLength(255);

                entity.Property(e => e.GENERO).HasMaxLength(255);

                entity.Property(e => e.ID_DPGC).HasMaxLength(255);

                entity.Property(e => e.ID_TIPO_MVMT_LNHA).HasMaxLength(255);

                entity.Property(e => e.MES).HasColumnType("datetime");

                entity.Property(e => e.MODELO).HasMaxLength(255);

                entity.Property(e => e.MODELO_RECEBIDO).HasMaxLength(255);

                entity.Property(e => e.NM_COND_PGTO).HasMaxLength(255);

                entity.Property(e => e.NM_DPST).HasMaxLength(255);

                entity.Property(e => e.NM_LOGN_ATND).HasMaxLength(255);

                entity.Property(e => e.NM_LOGN_ATND_FDLZ).HasMaxLength(255);

                entity.Property(e => e.NM_LOGN_ATND_SAP).HasMaxLength(255);

                entity.Property(e => e.NM_RZAO_SCAL).HasMaxLength(255);

                entity.Property(e => e.NM_TIPO_ORDM_VNDA).HasMaxLength(255);

                entity.Property(e => e.NM_TIPO_PDDO).HasMaxLength(255);

                entity.Property(e => e.NOME_COMERCIAL).HasMaxLength(255);

                entity.Property(e => e.NOME_FANTASIA).HasMaxLength(255);

                entity.Property(e => e.NR_CPF_CNPJ_SAP).HasMaxLength(255);

                entity.Property(e => e.NR_NOTA_FSCL).HasMaxLength(255);

                entity.Property(e => e.NR_SRAL).HasMaxLength(255);

                entity.Property(e => e.NR_TLFN).HasMaxLength(255);

                entity.Property(e => e.ORGV).HasMaxLength(255);

                entity.Property(e => e.PLANO_PRICING).HasMaxLength(255);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.SCORE).HasMaxLength(255);

                entity.Property(e => e.SEGMENTO).HasMaxLength(255);

                entity.Property(e => e.SEGMENTO_PLANO).HasMaxLength(255);

                entity.Property(e => e.SEMANA_DO_ANO).HasMaxLength(255);

                entity.Property(e => e.SEMANA_DO_MÊS).HasMaxLength(255);

                entity.Property(e => e.SISTEMA_OPERACIONAL).HasMaxLength(255);

                entity.Property(e => e.TECNOLOGIA_APARELHO).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO_UF).HasMaxLength(255);

                entity.Property(e => e.TIPO_CLT).HasMaxLength(255);

                entity.Property(e => e.TIT_DEP).HasMaxLength(255);

                entity.Property(e => e.UF).HasMaxLength(255);

                entity.Property(e => e.VOUCHER).HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_ASSOCIACAO_FDV>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_ASSOCIACAO_FDV");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL_ANT).HasColumnType("datetime");

                entity.Property(e => e.MATRICULA_ALTERACAO).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL_ANT).HasMaxLength(50);

                entity.Property(e => e.VENDEDOR)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_ASSOCIACAO_FDV_AGOSTO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_ASSOCIACAO_FDV AGOSTO");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL_ANT).HasColumnType("datetime");

                entity.Property(e => e.MATRICULA_ALTERACAO).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL_ANT).HasMaxLength(50);

                entity.Property(e => e.VENDEDOR)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_ASSOCIACAO_FDV_BKP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_ASSOCIACAO_FDV_BKP");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL_ANT).HasColumnType("datetime");

                entity.Property(e => e.MATRICULA_ALTERACAO).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL_ANT).HasMaxLength(50);

                entity.Property(e => e.VENDEDOR)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_ASSOCIACAO_FDV_DEZEMBRO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_ASSOCIACAO_FDV DEZEMBRO");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_GC_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELLIN_ANT).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_TERRITORIAL_ANT).HasColumnType("datetime");

                entity.Property(e => e.MATRICULA_ALTERACAO).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_GC_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_SELLIN_ANT).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(50);

                entity.Property(e => e.MATRICULA_TERRITORIAL_ANT).HasMaxLength(50);

                entity.Property(e => e.VENDEDOR)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_GERENTE_CONTA>(entity =>
            {
                entity.ToTable("CADASTRO_GERENTE_CONTAS");

                entity.Property(e => e.CPF)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cargo)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Ddd)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Matricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SellIn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Situacao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.UF)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CADASTRO_GERENTE_TERRITORIO>(entity =>
            {
                entity.ToTable("CADASTRO_GERENTE_TERRITORIO");

                entity.Property(e => e.AREA_ATUACAO_DDD)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DATA_CADASTRO).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETIVA_GESTAO).HasColumnType("datetime");

                entity.Property(e => e.DDD)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MATRICULA)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NOME)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.STATUS)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CADASTRO_NOME_REDE>(entity =>
            {
                entity.ToTable("CADASTRO_NOME_REDE");

                entity.Property(e => e.AREA).HasMaxLength(50);

                entity.Property(e => e.CANAL).HasMaxLength(150);

                entity.Property(e => e.COD_REDE_VENDEDOR).HasMaxLength(50);

                entity.Property(e => e.DT_CRIACAO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.GENERO)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.LOGIN_CRIACAO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.REDE).HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_PDV>(entity =>
            {
                entity.HasKey(e => e.Vendedor)
                    .HasName("PK__CADASTRO__A962497D1367E606");

                entity.ToTable("CADASTRO_PDV");

                entity.Property(e => e.Vendedor).HasMaxLength(50);

                entity.Property(e => e.ADMINISTRACAO).IsUnicode(false);

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.ASSINATURA_NO_CONTRATO_VIVO).IsUnicode(false);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.COD_REDE_VENDEDOR).HasMaxLength(50);

                entity.Property(e => e.CPF).IsUnicode(false);

                entity.Property(e => e.CPF2).IsUnicode(false);

                entity.Property(e => e.CPF3).IsUnicode(false);

                entity.Property(e => e.CPF4).IsUnicode(false);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Clusters).HasMaxLength(50);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DATA_ENVIO).IsUnicode(false);

                entity.Property(e => e.DATA_RECEBIMENTO).IsUnicode(false);

                entity.Property(e => e.DMS).IsUnicode(false);

                entity.Property(e => e.DRN).IsUnicode(false);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Data_Credenciamento).HasColumnType("datetime");

                entity.Property(e => e.Data_Descredenciamento).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.Estrelagem).HasMaxLength(50);

                entity.Property(e => e.GSS).HasMaxLength(50);

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.Local_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Local Loja");

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MODELO_CONTRATO).IsUnicode(false);

                entity.Property(e => e.Modelo_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Modelo Loja");

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.RENOVAÇÃO_AUTOMATICA)
                    .HasMaxLength(255)
                    .HasColumnName("RENOVAÇÃO AUTOMATICA");

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SOCIO1).IsUnicode(false);

                entity.Property(e => e.SOCIO2).IsUnicode(false);

                entity.Property(e => e.SOCIO3).IsUnicode(false);

                entity.Property(e => e.SOCIO4).IsUnicode(false);

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TIPO_MINUTA).IsUnicode(false);

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Tipo_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Tipo Loja");

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.VIGENCIA_ATUAL).HasMaxLength(255);

                entity.Property(e => e.VIGENCIA_FIM).IsUnicode(false);

                entity.Property(e => e.VIGENCIA_INICIO).IsUnicode(false);
            });

            modelBuilder.Entity<CADASTRO_PDV_COMPLEMENTO_AUX>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_PDV_COMPLEMENTO_AUX");

                entity.Property(e => e.ADABAS).HasMaxLength(255);

                entity.Property(e => e.ADMINISTRACAO).HasMaxLength(255);

                entity.Property(e => e.ASSINATURA_NO_CONTRATO_VIVO).HasMaxLength(255);

                entity.Property(e => e.CPF).HasMaxLength(255);

                entity.Property(e => e.CPF2).HasMaxLength(255);

                entity.Property(e => e.CPF3).HasMaxLength(255);

                entity.Property(e => e.CPF4).HasMaxLength(255);

                entity.Property(e => e.DATA_ENVIO).HasMaxLength(255);

                entity.Property(e => e.DATA_RECEBIMENTO).HasMaxLength(255);

                entity.Property(e => e.DMS).HasMaxLength(255);

                entity.Property(e => e.DRN).HasMaxLength(255);

                entity.Property(e => e.MODELO_CONTRATO).HasMaxLength(255);

                entity.Property(e => e.RENOVAÇÃO_AUTOMATICA)
                    .HasMaxLength(255)
                    .HasColumnName("RENOVAÇÃO AUTOMATICA");

                entity.Property(e => e.SOCIO1).HasMaxLength(255);

                entity.Property(e => e.SOCIO2).HasMaxLength(255);

                entity.Property(e => e.SOCIO3).HasMaxLength(255);

                entity.Property(e => e.SOCIO4).HasMaxLength(255);

                entity.Property(e => e.TIPO_MINUTA).HasMaxLength(255);

                entity.Property(e => e.VIGENCIA_ATUAL).HasMaxLength(255);

                entity.Property(e => e.VIGENCIA_FIM).HasMaxLength(255);

                entity.Property(e => e.VIGENCIA_INICIO).HasMaxLength(255);
            });

            modelBuilder.Entity<CADASTRO_X_VIVO_SIM>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_X_VIVO_SIM");

                entity.Property(e => e.DDD)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.LOGIN)
                    .IsRequired()
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.UF)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CADASTRO_X_VIVO_SIM_X_CANAL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CADASTRO_X_VIVO_SIM_X_CANAL");

                entity.Property(e => e.CANAL)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.LOGIN)
                    .IsRequired()
                    .HasMaxLength(45)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CARTEIRA_CADASTRO_GERAL_PDV>(entity =>
            {
                entity.HasKey(e => e.Vendedor)
                    .HasName("PK__CARTEIRA__A962497D1920BF5C");

                entity.ToTable("CARTEIRA_CADASTRO_GERAL_PDVS");

                entity.Property(e => e.Vendedor).HasMaxLength(50);

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DATA_NOVO_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_NOVO_SELLIN).HasColumnType("datetime");

                entity.Property(e => e.DATA_NOVO_TERRITORIAL).HasColumnType("datetime");

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GERENTE_CONTAS)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIO)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA TERRITORIO");

                entity.Property(e => e.MES_LIBERACAO).HasMaxLength(15);

                entity.Property(e => e.NOVO_GERENTE_TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.NOVO_GESTOR).HasMaxLength(255);

                entity.Property(e => e.NOVO_SELLIN).HasMaxLength(255);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);
            });

            modelBuilder.Entity<CNS_CADASTRO_GERAL_PDV>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_CADASTRO_GERAL_PDVS");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(115);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Clusters).HasMaxLength(50);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Data_Credenciamento).HasColumnType("datetime");

                entity.Property(e => e.Data_Descredenciamento).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EMAIL_GC)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL GC");

                entity.Property(e => e.EMAIL_SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL SELL IN");

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.Estrelagem).HasMaxLength(50);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.GERENTE_DIVISAO)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE DIVISAO");

                entity.Property(e => e.GSS).HasMaxLength(50);

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.Local_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Local Loja");

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GERENTE_CONTAS)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIO)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA TERRITORIO");

                entity.Property(e => e.Modelo_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Modelo Loja");

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIAO)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO).HasMaxLength(255);

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Tipo_Loja)
                    .HasMaxLength(255)
                    .HasColumnName("Tipo Loja");

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<CNS_CARTEIRA_DASHBOARD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_CARTEIRA_DASHBOARD");

                entity.Property(e => e.ADABAS___CIDADE)
                    .HasMaxLength(203)
                    .HasColumnName("ADABAS + CIDADE");

                entity.Property(e => e.ADABAS___REDE)
                    .HasMaxLength(308)
                    .HasColumnName("ADABAS + REDE");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(115);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DATA_DA_ATUALIZACAO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA DA ATUALIZACAO");

                entity.Property(e => e.DDD___VENDEDOR___REDE)
                    .HasMaxLength(316)
                    .HasColumnName("DDD + VENDEDOR + REDE");

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Data_Credenciamento).HasColumnType("datetime");

                entity.Property(e => e.Data_Descredenciamento).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.GERENTE_DIVISAO)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE DIVISAO");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GERENTE_CONTAS)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIO)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA TERRITORIO");

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIAO)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIPO_REDE)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TIPO REDE");

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<CNS_GERENTE_CONTAS_ATIVO>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_GERENTE_CONTAS_ATIVO");

                entity.Property(e => e.CPF)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cargo)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Ddd)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.Matricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SellIn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Situacao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.UF)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CNS_GERENTE_TERRITORIO_ATIVO>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_GERENTE_TERRITORIO_ATIVO");

                entity.Property(e => e.AREA_ATUACAO_DDD)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DATA_CADASTRO).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETIVA_GESTAO).HasColumnType("datetime");

                entity.Property(e => e.DDD)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.MATRICULA)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NOME)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.STATUS)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CNS_HIERARQUIA_CAMPANHA>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_HIERARQUIA_CAMPANHA");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CLS_GERENTE_CONTAS_SELL_IN)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CLS_GERENTE_CONTAS_SELL_OUT)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CLS_GERENTE_DIVISAO)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CLS_GERENTE_SECAO_TRTL)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.DATA)
                    .HasMaxLength(61)
                    .IsUnicode(false);

                entity.Property(e => e.DDD).HasMaxLength(5);

                entity.Property(e => e.DIRETOR)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.ID_SIEBEL).HasMaxLength(4000);

                entity.Property(e => e.MATRICULA_DIRETOR)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_CONTAS_SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_CONTAS_SELL_OUT)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_DIVISAO_TRTL)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_KAM_NACIONAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_KAM_REGIONAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_SECAO_CANAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NM_GERENTE_SECAO_TRTL)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_FANTASIA)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FANTASIA");

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIONAL)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_CONTAS_SELL_IN)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_CONTAS_SELL_OUT)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_DIVISAO_TRTL)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_KAM_NACIONAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_KAM_REGIONAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_SECAO_CANAL)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RE_GERENTE_SECAO_TRTL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TERRITORIO)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);
            });

            modelBuilder.Entity<CNS_VIVO_ADIANTE>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CNS_VIVO_ADIANTE");

                entity.Property(e => e.BAIRRO)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .UseCollation("SQL_Latin1_General_CP1251_CI_AS");

                entity.Property(e => e.CEP).HasMaxLength(4000);

                entity.Property(e => e.CIDADE)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .UseCollation("SQL_Latin1_General_CP1251_CI_AS");

                entity.Property(e => e.COMPLEMENTO)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DDD).HasMaxLength(5);

                entity.Property(e => e.GENEROVENDEDOR).HasMaxLength(255);

                entity.Property(e => e.G_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .UseCollation("SQL_Latin1_General_CP1251_CI_AS");

                entity.Property(e => e.G_CONTAS_RE)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LATITUDE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LOGRADOURO)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .UseCollation("SQL_Latin1_General_CP1251_CI_AS");

                entity.Property(e => e.LONGITUDE)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NOMESECAO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NOMETERRITORIO)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.NUMERO).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.SECAO)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.SECAO_RE)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TERRITORIO)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TERRITORIORE)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UFLOGRADOURO)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .UseCollation("SQL_Latin1_General_CP1251_CI_AS");

                entity.Property(e => e.UNIDADE_REGIONAL)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);
            });

            modelBuilder.Entity<DE_PARA_DDD_NACIONAL>(entity =>
            {
                entity.HasKey(e => e.Vendedor)
                    .HasName("PK_dbo.DE_PARA_DDD_NACIONAL");

                entity.ToTable("DE_PARA_DDD_NACIONAL");

                entity.Property(e => e.Vendedor).HasMaxLength(128);

                entity.Property(e => e.DataCadastroGestor).HasColumnType("datetime");

                entity.Property(e => e.DataCadastroSellIn).HasColumnType("datetime");

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");
            });

            modelBuilder.Entity<ENVIO_CARTEIRA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENVIO CARTEIRA");

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.GERENTE_CONTAS)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GERENTE_CONTAS)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GERENTE CONTAS");

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HEADCOUNT_LLPP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HEADCOUNT_LLPP");

                entity.Property(e => e.Ano).HasMaxLength(255);

                entity.Property(e => e.Area).HasMaxLength(255);

                entity.Property(e => e.Cargo).HasMaxLength(255);

                entity.Property(e => e.Cod_Cargo).HasColumnName("Cod Cargo");

                entity.Property(e => e.Data_Admissao)
                    .HasColumnType("datetime")
                    .HasColumnName("Data Admissao");

                entity.Property(e => e.Fim).HasMaxLength(255);

                entity.Property(e => e.Inicio).HasMaxLength(255);

                entity.Property(e => e.Mes).HasMaxLength(255);

                entity.Property(e => e.Nome).HasMaxLength(255);

                entity.Property(e => e.Regional).HasMaxLength(255);

                entity.Property(e => e.Status).HasMaxLength(255);

                entity.Property(e => e.Tipo_de_ausencia_ou_presenca)
                    .HasMaxLength(255)
                    .HasColumnName("Tipo de ausencia ou presenca");
            });

            modelBuilder.Entity<LOJAS_SCA_360>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LOJAS_SCA_360");

                entity.Property(e => e.DESCRICAO_LOJA).HasMaxLength(255);

                entity.Property(e => e.RAZAO_SOCIAL).HasMaxLength(255);

                entity.Property(e => e.UF).HasMaxLength(255);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);
            });

            modelBuilder.Entity<PERFIS_DANI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PERFIS_DANI");

                entity.Property(e => e.CARGO).HasMaxLength(255);

                entity.Property(e => e.PERFIL_DANI).HasMaxLength(255);

                entity.Property(e => e.SUBGRUPO).HasMaxLength(255);
            });

            modelBuilder.Entity<REDES_NACIONAI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REDES_NACIONAIS");

                entity.Property(e => e.AGENCIA).HasMaxLength(255);

                entity.Property(e => e.ATIVIDADE).HasMaxLength(255);

                entity.Property(e => e.ATUAL_ESTRELAGEM)
                    .HasMaxLength(255)
                    .HasColumnName("ATUAL ESTRELAGEM");

                entity.Property(e => e.BAIRRO_)
                    .HasMaxLength(255)
                    .HasColumnName("BAIRRO ");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CANAL_DISTRIBUIÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("CANAL DISTRIBUIÇÃO");

                entity.Property(e => e.CELULAR).HasMaxLength(255);

                entity.Property(e => e.CEP).HasMaxLength(255);

                entity.Property(e => e.CIDADE).HasMaxLength(255);

                entity.Property(e => e.CNPJ).HasMaxLength(255);

                entity.Property(e => e.CODIGO_BANCO)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO BANCO");

                entity.Property(e => e.CODIGO_VENDEDOR)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO VENDEDOR");

                entity.Property(e => e.COMPLEMENTO).HasMaxLength(255);

                entity.Property(e => e.CONDIÇÕES_DE_PAGAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("CONDIÇÕES DE PAGAMENTO");

                entity.Property(e => e.CONTATO).HasMaxLength(255);

                entity.Property(e => e.CÓDIGO_CLIENTE).HasColumnName("CÓDIGO CLIENTE");

                entity.Property(e => e.CÓDIGO_FORNECEDOR).HasColumnName("CÓDIGO FORNECEDOR");

                entity.Property(e => e.DATA_CADASTRO_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_FIM_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA FIM CONTRATO");

                entity.Property(e => e.DATA_INICIO_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA INICIO CONTRATO");

                entity.Property(e => e.DIGITO_VERIFICADOR)
                    .HasMaxLength(255)
                    .HasColumnName("DIGITO VERIFICADOR");

                entity.Property(e => e.ENDEREÇO).HasMaxLength(255);

                entity.Property(e => e.E_MAIL_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL COMERCIAL");

                entity.Property(e => e.E_MAIL_DIVULGAÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL DIVULGAÇÃO");

                entity.Property(e => e.E_MAIL_FINANCEIRO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL FINANCEIRO");

                entity.Property(e => e.FAX).HasMaxLength(255);

                entity.Property(e => e.GESTOR).HasMaxLength(255);

                entity.Property(e => e.GRUPO_VENDEDOR_NOME_GC)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO VENDEDOR/NOME GC");

                entity.Property(e => e.HOME_PAGE)
                    .HasMaxLength(255)
                    .HasColumnName("HOME PAGE");

                entity.Property(e => e.INSCRIÇÃO_ESTADUAL)
                    .HasMaxLength(255)
                    .HasColumnName("INSCRIÇÃO ESTADUAL");

                entity.Property(e => e.LIMITE).HasColumnType("money");

                entity.Property(e => e.MARGEM_APARELHO).HasColumnName("MARGEM APARELHO");

                entity.Property(e => e.MARGEM_CHIP).HasColumnName("MARGEM CHIP");

                entity.Property(e => e.MARGEM__RECARGA).HasColumnName("MARGEM  RECARGA");

                entity.Property(e => e.MATRICULA_GER_CONTA).HasMaxLength(255);

                entity.Property(e => e.NOME_FANTASIA)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FANTASIA");

                entity.Property(e => e.NUMERO).HasMaxLength(255);

                entity.Property(e => e.NUMERO_CONTA)
                    .HasMaxLength(255)
                    .HasColumnName("NUMERO CONTA");

                entity.Property(e => e.ORGANIZAÇÃO_DE_COMPRAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE COMPRAS");

                entity.Property(e => e.ORGANIZAÇÃO_DE_VENDAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE VENDAS");

                entity.Property(e => e.PAGADOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("PAGADOR FATURA");

                entity.Property(e => e.PONTO_DE_VENDA)
                    .HasMaxLength(255)
                    .HasColumnName("PONTO DE VENDA");

                entity.Property(e => e.PRAZO_LIMITE)
                    .HasColumnType("datetime")
                    .HasColumnName("PRAZO LIMITE");

                entity.Property(e => e.RAZÃO_SOCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("RAZÃO SOCIAL");

                entity.Property(e => e.RECEBEDOR_DA_MERCADORIA)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR DA MERCADORIA");

                entity.Property(e => e.RECEBEDOR_DO_COMISSIONAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR DO COMISSIONAMENTO");

                entity.Property(e => e.RECEBEDOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR FATURA");

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.REGIONAL2).HasMaxLength(255);

                entity.Property(e => e.REGIÃO_GEOGRAFICA)
                    .HasMaxLength(255)
                    .HasColumnName("REGIÃO GEOGRAFICA");

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SETOR_ATIVIDADE)
                    .HasMaxLength(255)
                    .HasColumnName("SETOR ATIVIDADE");

                entity.Property(e => e.STATUS_CALLIDUS)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS CALLIDUS");

                entity.Property(e => e.TELEFONE).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL2).HasMaxLength(255);

                entity.Property(e => e.UF).HasMaxLength(255);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);

                entity.Property(e => e.VPC__Sell_in_ou_Out_)
                    .HasMaxLength(255)
                    .HasColumnName("VPC (Sell in ou Out)");

                entity.Property(e => e.ÁREA_DE_CREDITO)
                    .HasMaxLength(255)
                    .HasColumnName("ÁREA DE CREDITO");
            });

            modelBuilder.Entity<REGISTRO_DIVISAO>(entity =>
            {
                entity.ToTable("REGISTRO_DIVISAO");

                entity.Property(e => e.Ddd)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Divisao)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Uf)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAB_AG_CREDENCIADOS_DESCOBRE_PDV>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_AG_CREDENCIADOS_DESCOBRE_PDV");

                entity.Property(e => e.CNTR_DSTR)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ALVO).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CLI_SAP).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CREDENC)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ENT_VEND).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_GESTOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DES_ACTIV)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_GEN_ENT)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SEC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DOM_FISCAL)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ESCV)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_BAIRRO)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_ENT)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_ENT_ABR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_GESTOR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOCAL)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOM_CASC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_CGC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NUM_INSCR_EST)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZAMP_ID)
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_ADMINISTRATIVO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_ADMINISTRATIVO");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GC)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_COMERCIAL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_COMERCIAL");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GC)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_COMPLETO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_COMPLETO");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GC)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIPO_CARTEIRA)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TIPO CARTEIRA");

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS");

                entity.Property(e => e.GERENTE_CONTAS)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_GC)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL).IsUnicode(false);

                entity.Property(e => e.SELL_IN)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.TERRITORIO).IsUnicode(false);

                entity.Property(e => e.TIPO).IsUnicode(false);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS 2");

                entity.Property(e => e.Cnpj).HasMaxLength(255);

                entity.Property(e => e.Ddd).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_GC)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(255)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional).HasMaxLength(255);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO).HasMaxLength(255);

                entity.Property(e => e.TIPO).HasMaxLength(255);

                entity.Property(e => e.Uf).HasMaxLength(255);

                entity.Property(e => e.Vendedor).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_AUX>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_COMPLETO_OUTRAS_REGIONAIS_AUX");

                entity.Property(e => e.GERENTE_CONTAS)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_GC)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN).HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL).IsUnicode(false);

                entity.Property(e => e.SELL_IN)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.TERRITORIO).IsUnicode(false);

                entity.Property(e => e.TIPO).IsUnicode(false);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_LLPP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_LLPP");

                entity.Property(e => e.AREA).HasMaxLength(110);

                entity.Property(e => e.Agencia).HasMaxLength(150);

                entity.Property(e => e.AreaAtuacaoPDV).HasMaxLength(5);

                entity.Property(e => e.Atividade).HasMaxLength(150);

                entity.Property(e => e.AtualEstrelagem).HasMaxLength(150);

                entity.Property(e => e.Bairro).HasMaxLength(255);

                entity.Property(e => e.Banco).HasMaxLength(150);

                entity.Property(e => e.Canal).HasMaxLength(255);

                entity.Property(e => e.Celular).HasMaxLength(15);

                entity.Property(e => e.Cep).HasMaxLength(50);

                entity.Property(e => e.Cidade).HasMaxLength(150);

                entity.Property(e => e.Cnpj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodIbge).HasMaxLength(130);

                entity.Property(e => e.CodigoBanco).HasMaxLength(150);

                entity.Property(e => e.CodigoCliente).HasMaxLength(150);

                entity.Property(e => e.CodigoFornecedor).HasMaxLength(150);

                entity.Property(e => e.Complemento).HasMaxLength(255);

                entity.Property(e => e.Contato).HasMaxLength(150);

                entity.Property(e => e.DataFimContrato).HasColumnType("datetime");

                entity.Property(e => e.DataInicioContrato).HasColumnType("datetime");

                entity.Property(e => e.Ddd).HasMaxLength(5);

                entity.Property(e => e.DigitoVerificador).HasMaxLength(255);

                entity.Property(e => e.EmailComercial).HasMaxLength(150);

                entity.Property(e => e.EmailDivulgação).HasMaxLength(150);

                entity.Property(e => e.EmailFinanceiro).HasMaxLength(150);

                entity.Property(e => e.Endereco).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.Genero).HasMaxLength(255);

                entity.Property(e => e.InscricaoEstadual).HasMaxLength(150);

                entity.Property(e => e.Instancia).HasMaxLength(150);

                entity.Property(e => e.Ixos).HasMaxLength(130);

                entity.Property(e => e.LoginSiebel).HasMaxLength(150);

                entity.Property(e => e.MATRICULA_GC)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.Numero).HasMaxLength(110);

                entity.Property(e => e.NumeroConta).HasMaxLength(130);

                entity.Property(e => e.OptanteSimples).HasMaxLength(150);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PontoVenda).HasMaxLength(150);

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SetorAtividade).HasMaxLength(115);

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TIPO_CARTEIRA)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TIPO CARTEIRA");

                entity.Property(e => e.Telefone).HasMaxLength(15);

                entity.Property(e => e.Uf).HasMaxLength(5);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_OUTRAS_REGIONAIS_BKP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_OUTRAS_REGIONAIS_BKP");

                entity.Property(e => e.Cnpj).HasMaxLength(255);

                entity.Property(e => e.GERENTE_CONTAS)
                    .HasMaxLength(255)
                    .HasColumnName("GERENTE CONTAS");

                entity.Property(e => e.MATRICULA_GC).HasColumnName("MATRICULA GC");

                entity.Property(e => e.MATRICULA_SELLIN)
                    .HasMaxLength(255)
                    .HasColumnName("MATRICULA SELLIN");

                entity.Property(e => e.MATRICULA_TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.NomeFantasia).HasMaxLength(255);

                entity.Property(e => e.RazaoSocial).HasMaxLength(255);

                entity.Property(e => e.Regional).HasMaxLength(255);

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.StatusCallidus).HasMaxLength(255);

                entity.Property(e => e.TERRITORIO).HasMaxLength(255);

                entity.Property(e => e.TIPO).HasMaxLength(255);

                entity.Property(e => e.Uf).HasMaxLength(255);

                entity.Property(e => e.Vendedor).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_SELL_IN>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_SELL_IN");

                entity.Property(e => e.AGENCIA).HasMaxLength(255);

                entity.Property(e => e.AREA_ATUAÇÃO_DDD_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("AREA ATUAÇÃO DDD GESTOR");

                entity.Property(e => e.ATIVIDADE).HasMaxLength(255);

                entity.Property(e => e.ATUAL_ESTRELAGEM)
                    .HasMaxLength(255)
                    .HasColumnName("ATUAL ESTRELAGEM");

                entity.Property(e => e.BAIRRO_)
                    .HasMaxLength(255)
                    .HasColumnName("BAIRRO ");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CANAL_DISTRIBUIÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("CANAL DISTRIBUIÇÃO");

                entity.Property(e => e.CELULAR).HasMaxLength(255);

                entity.Property(e => e.CEP).HasMaxLength(255);

                entity.Property(e => e.CIDADE).HasMaxLength(255);

                entity.Property(e => e.CNPJ).HasMaxLength(255);

                entity.Property(e => e.CODIGO_BANCO)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO BANCO");

                entity.Property(e => e.CODIGO_VENDEDOR)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO VENDEDOR");

                entity.Property(e => e.COD_IBGE).HasMaxLength(255);

                entity.Property(e => e.COMPLEMENTO).HasMaxLength(255);

                entity.Property(e => e.CONDIÇÕES_DE_PAGAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("CONDIÇÕES DE PAGAMENTO");

                entity.Property(e => e.CONTATO).HasMaxLength(255);

                entity.Property(e => e.CÓDIGO_CLIENTE).HasColumnName("CÓDIGO CLIENTE");

                entity.Property(e => e.CÓDIGO_FORNECEDOR).HasColumnName("CÓDIGO FORNECEDOR");

                entity.Property(e => e.DATA_CADASTRO_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_FIM_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA FIM CONTRATO");

                entity.Property(e => e.DATA_INICIO_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA INICIO CONTRATO");

                entity.Property(e => e.DDD_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("DDD GESTOR");

                entity.Property(e => e.DIGITO_VERIFICADOR)
                    .HasMaxLength(255)
                    .HasColumnName("DIGITO VERIFICADOR");

                entity.Property(e => e.ENDEREÇO).HasMaxLength(255);

                entity.Property(e => e.E_MAIL_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL COMERCIAL");

                entity.Property(e => e.E_MAIL_DIVULGAÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL DIVULGAÇÃO");

                entity.Property(e => e.E_MAIL_FINANCEIRO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL FINANCEIRO");

                entity.Property(e => e.FAX).HasMaxLength(255);

                entity.Property(e => e.GERENTE_TERRITORIAL)
                    .HasMaxLength(255)
                    .HasColumnName("GERENTE TERRITORIAL");

                entity.Property(e => e.GESTOR).HasMaxLength(255);

                entity.Property(e => e.GRUPO_VENDEDOR_NOME_GC)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO VENDEDOR/NOME GC");

                entity.Property(e => e.HOME_PAGE)
                    .HasMaxLength(255)
                    .HasColumnName("HOME PAGE");

                entity.Property(e => e.INSCRIÇÃO_ESTADUAL)
                    .HasMaxLength(255)
                    .HasColumnName("INSCRIÇÃO ESTADUAL");

                entity.Property(e => e.IXOS).HasMaxLength(255);

                entity.Property(e => e.LIMITE).HasColumnType("money");

                entity.Property(e => e.MARGEM_APARELHO).HasColumnName("MARGEM APARELHO");

                entity.Property(e => e.MARGEM_CHIP).HasColumnName("MARGEM CHIP");

                entity.Property(e => e.MARGEM__RECARGA).HasColumnName("MARGEM  RECARGA");

                entity.Property(e => e.MATRICULA_GER_CONTA).HasMaxLength(255);

                entity.Property(e => e.NOME_FANTASIA)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FANTASIA");

                entity.Property(e => e.NUMERO).HasMaxLength(255);

                entity.Property(e => e.NUMERO_CONTA)
                    .HasMaxLength(255)
                    .HasColumnName("NUMERO CONTA");

                entity.Property(e => e.OPTANTE_SIMPLES).HasColumnName("OPTANTE SIMPLES");

                entity.Property(e => e.ORGANIZAÇÃO_DE_COMPRAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE COMPRAS");

                entity.Property(e => e.ORGANIZAÇÃO_DE_VENDAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE VENDAS");

                entity.Property(e => e.PAGADOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("PAGADOR FATURA");

                entity.Property(e => e.PONTO_DE_VENDA)
                    .HasMaxLength(255)
                    .HasColumnName("PONTO DE VENDA");

                entity.Property(e => e.PRAZO_LIMITE)
                    .HasColumnType("datetime")
                    .HasColumnName("PRAZO LIMITE");

                entity.Property(e => e.RAZÃO_SOCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("RAZÃO SOCIAL");

                entity.Property(e => e.RECEBEDOR_DA_MERCADORIA)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECEBEDOR DA MERCADORIA");

                entity.Property(e => e.RECEBEDOR_DO_COMISSIONAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR DO COMISSIONAMENTO");

                entity.Property(e => e.RECEBEDOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR FATURA");

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.REGIONAL2).HasMaxLength(255);

                entity.Property(e => e.REGIÃO_GEOGRAFICA)
                    .HasMaxLength(255)
                    .HasColumnName("REGIÃO GEOGRAFICA");

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SETOR_ATIVIDADE)
                    .HasMaxLength(255)
                    .HasColumnName("SETOR ATIVIDADE");

                entity.Property(e => e.STATUS_CALLIDUS)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS CALLIDUS");

                entity.Property(e => e.TELEFONE).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL2).HasMaxLength(255);

                entity.Property(e => e.UF).HasMaxLength(255);

                entity.Property(e => e.UF_LOCALIDADE_PDV).HasMaxLength(255);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);

                entity.Property(e => e.VPC__Sell_in_ou_Out_)
                    .HasMaxLength(255)
                    .HasColumnName("VPC (Sell in ou Out)");

                entity.Property(e => e.ÁREA_DE_CREDITO)
                    .HasMaxLength(255)
                    .HasColumnName("ÁREA DE CREDITO");
            });

            modelBuilder.Entity<TAB_CADASTRO_GERAL_PDVS_USUARIO_VIVO_SIM>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CADASTRO_GERAL_PDVS_USUARIO_VIVO_SIM");

                entity.Property(e => e.AGENCIA).HasMaxLength(255);

                entity.Property(e => e.AREA_ATUAÇÃO_DDD_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("AREA ATUAÇÃO DDD GESTOR");

                entity.Property(e => e.ATIVIDADE).HasMaxLength(255);

                entity.Property(e => e.ATUAL_ESTRELAGEM)
                    .HasMaxLength(255)
                    .HasColumnName("ATUAL ESTRELAGEM");

                entity.Property(e => e.BAIRRO_)
                    .HasMaxLength(255)
                    .HasColumnName("BAIRRO ");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CANAL_DISTRIBUIÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("CANAL DISTRIBUIÇÃO");

                entity.Property(e => e.CELULAR).HasMaxLength(255);

                entity.Property(e => e.CEP).HasMaxLength(255);

                entity.Property(e => e.CIDADE).HasMaxLength(255);

                entity.Property(e => e.CNPJ).HasMaxLength(255);

                entity.Property(e => e.CODIGO_BANCO)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO BANCO");

                entity.Property(e => e.CODIGO_VENDEDOR)
                    .HasMaxLength(255)
                    .HasColumnName("CODIGO VENDEDOR");

                entity.Property(e => e.COD_IBGE).HasMaxLength(255);

                entity.Property(e => e.COMPLEMENTO).HasMaxLength(255);

                entity.Property(e => e.CONDIÇÕES_DE_PAGAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("CONDIÇÕES DE PAGAMENTO");

                entity.Property(e => e.CONTATO).HasMaxLength(255);

                entity.Property(e => e.CÓDIGO_CLIENTE).HasColumnName("CÓDIGO CLIENTE");

                entity.Property(e => e.CÓDIGO_FORNECEDOR).HasColumnName("CÓDIGO FORNECEDOR");

                entity.Property(e => e.DATA_CADASTRO_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_CADASTRO_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_GESTOR).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETI_CART_SELL_IN).HasColumnType("datetime");

                entity.Property(e => e.DATA_FIM_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA FIM CONTRATO");

                entity.Property(e => e.DATA_INICIO_CONTRATO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA INICIO CONTRATO");

                entity.Property(e => e.DDD_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("DDD GESTOR");

                entity.Property(e => e.DIGITO_VERIFICADOR)
                    .HasMaxLength(255)
                    .HasColumnName("DIGITO VERIFICADOR");

                entity.Property(e => e.ENDEREÇO).HasMaxLength(255);

                entity.Property(e => e.E_MAIL_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL COMERCIAL");

                entity.Property(e => e.E_MAIL_DIVULGAÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL DIVULGAÇÃO");

                entity.Property(e => e.E_MAIL_FINANCEIRO)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL FINANCEIRO");

                entity.Property(e => e.FAX).HasMaxLength(255);

                entity.Property(e => e.GERENTE_TERRITORIAL)
                    .HasMaxLength(255)
                    .HasColumnName("GERENTE TERRITORIAL");

                entity.Property(e => e.GESTOR).HasMaxLength(255);

                entity.Property(e => e.GRUPO_VENDEDOR_NOME_GC)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO VENDEDOR/NOME GC");

                entity.Property(e => e.HOME_PAGE)
                    .HasMaxLength(255)
                    .HasColumnName("HOME PAGE");

                entity.Property(e => e.INSCRIÇÃO_ESTADUAL)
                    .HasMaxLength(255)
                    .HasColumnName("INSCRIÇÃO ESTADUAL");

                entity.Property(e => e.IXOS).HasMaxLength(255);

                entity.Property(e => e.LIMITE).HasColumnType("money");

                entity.Property(e => e.MARGEM_APARELHO).HasColumnName("MARGEM APARELHO");

                entity.Property(e => e.MARGEM_CHIP).HasColumnName("MARGEM CHIP");

                entity.Property(e => e.MARGEM__RECARGA).HasColumnName("MARGEM  RECARGA");

                entity.Property(e => e.MATRICULA_GER_CONTA).HasMaxLength(255);

                entity.Property(e => e.MATRICULA_SELL_IN)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MATRICULA_TERRITORIAL)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_FANTASIA)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FANTASIA");

                entity.Property(e => e.NUMERO).HasMaxLength(255);

                entity.Property(e => e.NUMERO_CONTA)
                    .HasMaxLength(255)
                    .HasColumnName("NUMERO CONTA");

                entity.Property(e => e.OPTANTE_SIMPLES).HasColumnName("OPTANTE SIMPLES");

                entity.Property(e => e.ORGANIZAÇÃO_DE_COMPRAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE COMPRAS");

                entity.Property(e => e.ORGANIZAÇÃO_DE_VENDAS)
                    .HasMaxLength(255)
                    .HasColumnName("ORGANIZAÇÃO DE VENDAS");

                entity.Property(e => e.PAGADOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("PAGADOR FATURA");

                entity.Property(e => e.PONTO_DE_VENDA)
                    .HasMaxLength(255)
                    .HasColumnName("PONTO DE VENDA");

                entity.Property(e => e.PRAZO_LIMITE)
                    .HasColumnType("datetime")
                    .HasColumnName("PRAZO LIMITE");

                entity.Property(e => e.RAZÃO_SOCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("RAZÃO SOCIAL");

                entity.Property(e => e.RECEBEDOR_DA_MERCADORIA)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECEBEDOR DA MERCADORIA");

                entity.Property(e => e.RECEBEDOR_DO_COMISSIONAMENTO)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR DO COMISSIONAMENTO");

                entity.Property(e => e.RECEBEDOR_FATURA)
                    .HasMaxLength(255)
                    .HasColumnName("RECEBEDOR FATURA");

                entity.Property(e => e.REDE).HasMaxLength(255);

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.REGIONAL2).HasMaxLength(255);

                entity.Property(e => e.REGIÃO_GEOGRAFICA)
                    .HasMaxLength(255)
                    .HasColumnName("REGIÃO GEOGRAFICA");

                entity.Property(e => e.SELL_IN)
                    .HasMaxLength(255)
                    .HasColumnName("SELL IN");

                entity.Property(e => e.SETOR_ATIVIDADE)
                    .HasMaxLength(255)
                    .HasColumnName("SETOR ATIVIDADE");

                entity.Property(e => e.STATUS_CALLIDUS)
                    .HasMaxLength(255)
                    .HasColumnName("STATUS CALLIDUS");

                entity.Property(e => e.TELEFONE).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL).HasMaxLength(255);

                entity.Property(e => e.TERRITORIAL2).HasMaxLength(255);

                entity.Property(e => e.UF).HasMaxLength(255);

                entity.Property(e => e.UF_LOCALIDADE_PDV).HasMaxLength(255);

                entity.Property(e => e.VENDEDOR).HasMaxLength(255);

                entity.Property(e => e.VPC__Sell_in_ou_Out_)
                    .HasMaxLength(255)
                    .HasColumnName("VPC (Sell in ou Out)");

                entity.Property(e => e.ÁREA_DE_CREDITO)
                    .HasMaxLength(255)
                    .HasColumnName("ÁREA DE CREDITO");
            });

            modelBuilder.Entity<TAB_CANAIS_RESUMO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_CANAIS_RESUMO");

                entity.Property(e => e.DES_ACTIV)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_CAN_RES)
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAB_COLABORADORES_LLPP>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_COLABORADORES_LLPP");

                entity.Property(e => e.Adabas).HasMaxLength(255);

                entity.Property(e => e.Data_Cadastro)
                    .HasColumnType("datetime")
                    .HasColumnName("Data Cadastro");

                entity.Property(e => e.Data_Entrada)
                    .HasColumnType("datetime")
                    .HasColumnName("Data Entrada");

                entity.Property(e => e.Loja).HasMaxLength(255);

                entity.Property(e => e.Matricula_Vivo)
                    .HasMaxLength(255)
                    .HasColumnName("Matricula Vivo");

                entity.Property(e => e.Nome).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_DE_PARA_ADABAS_LOJAS_PROPRIA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_DE_PARA_ADABAS_LOJAS_PROPRIAS");

                entity.Property(e => e.COD_CREDENC)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.COD_CREDENC_NOVO).HasMaxLength(50);

                entity.Property(e => e.DOM_FISCAL).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT_ABR).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_LOGRADOUROS_E_CLASSIFICAÇÃO>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_LOGRADOUROS_E_CLASSIFICAÇÃO");

                entity.Property(e => e.Classficação_1)
                    .HasMaxLength(255)
                    .HasColumnName("Classficação 1");

                entity.Property(e => e.Classificação_2)
                    .HasMaxLength(255)
                    .HasColumnName("Classificação 2");

                entity.Property(e => e.DOM_FISCAL).HasMaxLength(255);

                entity.Property(e => e.NOME_LOCAL).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_MAN_GERENTE_CONTA_AUDITORIum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_MAN_GERENTE_CONTA_AUDITORIA");

                entity.Property(e => e.AREA_ATUAÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("AREA ATUAÇÃO");

                entity.Property(e => e.CADASTRADO_NO_CALLIDUS)
                    .HasMaxLength(255)
                    .HasColumnName("CADASTRADO NO CALLIDUS");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CANAL_SAP)
                    .HasMaxLength(255)
                    .HasColumnName("CANAL SAP");

                entity.Property(e => e.CPF_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("CPF FINAL");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.DATA_ATUALIZACAO).HasColumnType("datetime");

                entity.Property(e => e.EMAIL_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL FINAL");

                entity.Property(e => e.ESCRITORIO_DE_VENDAS)
                    .HasMaxLength(255)
                    .HasColumnName("ESCRITORIO DE VENDAS");

                entity.Property(e => e.GRUPO_VENDEDOR_UF)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO VENDEDOR UF");

                entity.Property(e => e.LIBERADO_NO_SAP)
                    .HasMaxLength(255)
                    .HasColumnName("LIBERADO NO SAP");

                entity.Property(e => e.MATRICULA).HasMaxLength(255);

                entity.Property(e => e.NOME_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FINAL");

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.SELL_IN).HasColumnName("SELL IN");

                entity.Property(e => e.SEXO).HasMaxLength(255);

                entity.Property(e => e.SITUAÇÃO).HasMaxLength(255);

                entity.Property(e => e.TELEFONE_FINAL).HasColumnName("TELEFONE FINAL");

                entity.Property(e => e.UF).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_MAN_GERENTE_CONTum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_MAN_GERENTE_CONTA");

                entity.Property(e => e.AREA_ATUAÇÃO)
                    .HasMaxLength(255)
                    .HasColumnName("AREA ATUAÇÃO");

                entity.Property(e => e.CADASTRADO_NO_CALLIDUS)
                    .HasMaxLength(255)
                    .HasColumnName("CADASTRADO NO CALLIDUS");

                entity.Property(e => e.CANAL).HasMaxLength(255);

                entity.Property(e => e.CANAL_SAP)
                    .HasMaxLength(255)
                    .HasColumnName("CANAL SAP");

                entity.Property(e => e.CPF_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("CPF FINAL");

                entity.Property(e => e.DATA).HasColumnType("datetime");

                entity.Property(e => e.EMAIL_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("EMAIL FINAL");

                entity.Property(e => e.ESCRITORIO_DE_VENDAS)
                    .HasMaxLength(255)
                    .HasColumnName("ESCRITORIO DE VENDAS");

                entity.Property(e => e.GRUPO_VENDEDOR_UF)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO VENDEDOR UF");

                entity.Property(e => e.LIBERADO_NO_SAP)
                    .HasMaxLength(255)
                    .HasColumnName("LIBERADO NO SAP");

                entity.Property(e => e.MATRICULA).HasMaxLength(255);

                entity.Property(e => e.NOME_FINAL)
                    .HasMaxLength(255)
                    .HasColumnName("NOME FINAL");

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.SELL_IN).HasColumnName("SELL IN");

                entity.Property(e => e.SEXO).HasMaxLength(255);

                entity.Property(e => e.SITUAÇÃO).HasMaxLength(255);

                entity.Property(e => e.TELEFONE_FINAL).HasColumnName("TELEFONE FINAL");

                entity.Property(e => e.UF).HasMaxLength(255);
            });

            modelBuilder.Entity<TAB_PESSOA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_PESSOAS");

                entity.Property(e => e.AFASTAMENTO).HasMaxLength(255);

                entity.Property(e => e.BAIRRO_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("BAIRRO COMERCIAL");

                entity.Property(e => e.CALL_CENTER)
                    .HasMaxLength(255)
                    .HasColumnName("CALL CENTER");

                entity.Property(e => e.CARGO).HasMaxLength(255);

                entity.Property(e => e.CATEGORIA).HasMaxLength(255);

                entity.Property(e => e.CELULAR).HasMaxLength(255);

                entity.Property(e => e.CENTRO_DE_CUSTO)
                    .HasMaxLength(255)
                    .HasColumnName("CENTRO DE CUSTO");

                entity.Property(e => e.CEP_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("CEP COMERCIAL");

                entity.Property(e => e.CIDADE_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("CIDADE COMERCIAL");

                entity.Property(e => e.CNPJ).HasMaxLength(255);

                entity.Property(e => e.COMPLEMENTO_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("COMPLEMENTO COMERCIAL");

                entity.Property(e => e.CPF).HasMaxLength(255);

                entity.Property(e => e.CÓDIGO_CARGO_SSFF).HasColumnName("CÓDIGO CARGO SSFF");

                entity.Property(e => e.CÓDIGO_EMPRESA).HasColumnName("CÓDIGO EMPRESA");

                entity.Property(e => e.CÓDIGO_SUBGRUPO)
                    .HasMaxLength(255)
                    .HasColumnName("CÓDIGO SUBGRUPO");

                entity.Property(e => e.CÓDIGO_UNIDADE_SAP).HasColumnName("CÓDIGO UNIDADE SAP");

                entity.Property(e => e.CÓDIGO_UNIDADE_SSFF).HasColumnName("CÓDIGO UNIDADE SSFF");

                entity.Property(e => e.DATA_ADMISSÃO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA ADMISSÃO");

                entity.Property(e => e.DATA_DESLIGAMENTO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA DESLIGAMENTO");

                entity.Property(e => e.DATA_DE_NASCIMENTO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA DE NASCIMENTO");

                entity.Property(e => e.DATA_FIM_AFASTAMENTO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA FIM AFASTAMENTO");

                entity.Property(e => e.DATA_FIM_ESTABILIDADE)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA FIM ESTABILIDADE");

                entity.Property(e => e.DATA_INÍCIO_AFASTAMENTO)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA INÍCIO AFASTAMENTO");

                entity.Property(e => e.DATA_INÍCIO_ESTABILIDADE)
                    .HasColumnType("datetime")
                    .HasColumnName("DATA INÍCIO ESTABILIDADE");

                entity.Property(e => e.DIRETORIA_1)
                    .HasMaxLength(255)
                    .HasColumnName("DIRETORIA 1");

                entity.Property(e => e.DIRETORIA_2)
                    .HasMaxLength(255)
                    .HasColumnName("DIRETORIA 2");

                entity.Property(e => e.DIRETORIA_3)
                    .HasMaxLength(255)
                    .HasColumnName("DIRETORIA 3");

                entity.Property(e => e.ELEGÍVEL_AO_TELETRABALHO)
                    .HasMaxLength(255)
                    .HasColumnName("ELEGÍVEL AO TELETRABALHO");

                entity.Property(e => e.EMPRESA).HasMaxLength(255);

                entity.Property(e => e.ENDEREÇO_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("ENDEREÇO COMERCIAL");

                entity.Property(e => e.ESTABILIDADE).HasMaxLength(255);

                entity.Property(e => e.ESTADO_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("ESTADO COMERCIAL");

                entity.Property(e => e.E_MAIL)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL");

                entity.Property(e => e.E_MAIL_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("E-MAIL GESTOR");

                entity.Property(e => e.FAIXA_DE_IDADE)
                    .HasMaxLength(255)
                    .HasColumnName("FAIXA DE IDADE");

                entity.Property(e => e.FAIXA_TEMPO_DE_EMPRESA)
                    .HasMaxLength(255)
                    .HasColumnName("FAIXA TEMPO DE EMPRESA");

                entity.Property(e => e.FILIAL).HasMaxLength(255);

                entity.Property(e => e.FIM_FÉRIAS)
                    .HasColumnType("datetime")
                    .HasColumnName("FIM FÉRIAS");

                entity.Property(e => e.FIM_PRÓXIMAS_FÉRIAS)
                    .HasColumnType("datetime")
                    .HasColumnName("FIM PRÓXIMAS FÉRIAS");

                entity.Property(e => e.FÉRIAS_NO_MÊS)
                    .HasMaxLength(255)
                    .HasColumnName("FÉRIAS NO MÊS");

                entity.Property(e => e.GERÊNCIA).HasMaxLength(255);

                entity.Property(e => e.GERÊNCIA_SR)
                    .HasMaxLength(255)
                    .HasColumnName("GERÊNCIA SR");

                entity.Property(e => e.GESTOR).HasMaxLength(255);

                entity.Property(e => e.GÊNERO).HasMaxLength(255);

                entity.Property(e => e.IDADE).HasMaxLength(255);

                entity.Property(e => e.INÍCIO_FÉRIAS)
                    .HasColumnType("datetime")
                    .HasColumnName("INÍCIO FÉRIAS");

                entity.Property(e => e.INÍCIO_PRÓXIMAS_FÉRIAS)
                    .HasColumnType("datetime")
                    .HasColumnName("INÍCIO PRÓXIMAS FÉRIAS");

                entity.Property(e => e.LOJA).HasMaxLength(255);

                entity.Property(e => e.MATRÍCULA).HasMaxLength(255);

                entity.Property(e => e.MATRÍCULA_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("MATRÍCULA GESTOR");

                entity.Property(e => e.MODIFICADO)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.MÊS).HasMaxLength(255);

                entity.Property(e => e.NOME).HasMaxLength(255);

                entity.Property(e => e.NOME_EMPRESA)
                    .HasMaxLength(255)
                    .HasColumnName("NOME EMPRESA");

                entity.Property(e => e.NÚMERO_COMERCIAL)
                    .HasMaxLength(255)
                    .HasColumnName("NÚMERO COMERCIAL");

                entity.Property(e => e.OBJETO_DE_CUSTO)
                    .HasMaxLength(255)
                    .HasColumnName("OBJETO DE CUSTO");

                entity.Property(e => e.OBSERVACAO)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.POSIÇÃO).HasMaxLength(255);

                entity.Property(e => e.POSIÇÃO_SAP).HasColumnName("POSIÇÃO SAP");

                entity.Property(e => e.QTD_FILHOS).HasColumnName("QTD FILHOS");

                entity.Property(e => e.REGIONAL).HasMaxLength(255);

                entity.Property(e => e.SIGLA).HasMaxLength(255);

                entity.Property(e => e.STATUS).HasMaxLength(255);

                entity.Property(e => e.SUBGRUPO).HasMaxLength(255);

                entity.Property(e => e.SUBÁREA).HasMaxLength(255);

                entity.Property(e => e.TEMPO_DE_EMPRESA).HasColumnName("TEMPO DE EMPRESA");

                entity.Property(e => e.USER_ID_SSFF)
                    .HasMaxLength(255)
                    .HasColumnName("USER ID SSFF");

                entity.Property(e => e.USER_ID_SSFF_GESTOR)
                    .HasMaxLength(255)
                    .HasColumnName("USER ID SSFF GESTOR");

                entity.Property(e => e.VP).HasMaxLength(255);

                entity.Property(e => e.ÁREA).HasMaxLength(255);

                entity.Property(e => e.ÚLTIMA_DATA_OCUPAÇÃO_POSIÇÃO)
                    .HasColumnType("datetime")
                    .HasColumnName("ÚLTIMA DATA OCUPAÇÃO POSIÇÃO");
            });

            modelBuilder.Entity<VIEW_GERENTE_CONTA>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW_GERENTE_CONTAS");

                entity.Property(e => e.CPF)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Ddd)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ID).ValueGeneratedOnAdd();

                entity.Property(e => e.Matricula)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Origem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SellIn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Situacao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.UF)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VIEW_GERENTE_TERRITORIAL>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW_GERENTE_TERRITORIAL");

                entity.Property(e => e.AREA_ATUACAO_DDD)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DATA_CADASTRO).HasColumnType("datetime");

                entity.Property(e => e.DATA_EFETIVA_GESTAO).HasColumnType("datetime");

                entity.Property(e => e.DDD)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MATRICULA)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NOME)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.STATUS)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VIEW_GERENTE_TERRITORIO>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW_GERENTE_TERRITORIO");

                entity.Property(e => e.MATRICULA)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NOME)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VIEW_VIVO_GRC_AG_CREDENCIADOS_DESCOBRE_PDV>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VIEW_VIVO_GRC_AG_CREDENCIADOS_DESCOBRE_PDV");

                entity.Property(e => e.CNTR_DSTR)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.COD_ALVO).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CLI_SAP).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_CREDENC).HasMaxLength(255);

                entity.Property(e => e.COD_ENT_VEND).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.COD_GESTOR).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DES_ACTIV).HasMaxLength(255);

                entity.Property(e => e.DES_GEN_ENT).HasMaxLength(255);

                entity.Property(e => e.DES_REG)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DES_REG_1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DES_SEC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DOM_FISCAL).HasMaxLength(255);

                entity.Property(e => e.ESCV)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_BAIRRO).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT).HasMaxLength(255);

                entity.Property(e => e.NOME_ENT_ABR).HasMaxLength(255);

                entity.Property(e => e.NOME_GESTOR)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NOME_LOCAL).HasMaxLength(255);

                entity.Property(e => e.NOM_CASC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NUM_CGC).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NUM_INSCR_EST)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZAMP_ID).HasMaxLength(4000);
            });

            modelBuilder.Entity<ZS118_NOTE_10>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ZS118_NOTE_10");

                entity.Property(e => e.CENT).HasMaxLength(255);

                entity.Property(e => e.CENTRO_DE_CUSTO)
                    .HasMaxLength(255)
                    .HasColumnName("CENTRO DE CUSTO");

                entity.Property(e => e.COND_PGT)
                    .HasMaxLength(255)
                    .HasColumnName("COND PGT");

                entity.Property(e => e.CONTA_DO_RAZÃO)
                    .HasMaxLength(255)
                    .HasColumnName("CONTA DO RAZÃO");

                entity.Property(e => e.CPF_CNPJ)
                    .HasMaxLength(255)
                    .HasColumnName("CPF/CNPJ");

                entity.Property(e => e.CRIADO_POR)
                    .HasMaxLength(255)
                    .HasColumnName("CRIADO POR");

                entity.Property(e => e.DATA_FORM).HasColumnType("datetime");

                entity.Property(e => e.DATA_NF)
                    .HasMaxLength(255)
                    .HasColumnName("DATA NF");

                entity.Property(e => e.DEPOSITO).HasMaxLength(255);

                entity.Property(e => e.DESCRIÇÃO).HasMaxLength(255);

                entity.Property(e => e.DESCRIÇÃO_DA_OV)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIÇÃO DA OV");

                entity.Property(e => e.DIVI).HasMaxLength(255);

                entity.Property(e => e.DOCFAT).HasMaxLength(255);

                entity.Property(e => e.ESCV).HasMaxLength(255);

                entity.Property(e => e.FORMA_PGT)
                    .HasMaxLength(255)
                    .HasColumnName("FORMA PGT");

                entity.Property(e => e.GAMA_DO_APARELHO)
                    .HasMaxLength(255)
                    .HasColumnName("GAMA DO APARELHO");

                entity.Property(e => e.GPV).HasMaxLength(255);

                entity.Property(e => e.GRUPO_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO CLIENTE");

                entity.Property(e => e.GRUPO_CLIENTE_5)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO CLIENTE 5");

                entity.Property(e => e.MARGEM_BRUTA).HasColumnName("MARGEM BRUTA");

                entity.Property(e => e.MATERIAL).HasMaxLength(255);

                entity.Property(e => e.MESANO).HasMaxLength(255);

                entity.Property(e => e.MES_ANO_CRIAÇÃO_FATURA).HasMaxLength(255);

                entity.Property(e => e.MOTIVO_ORDEM)
                    .HasMaxLength(255)
                    .HasColumnName("MOTIVO ORDEM");

                entity.Property(e => e.MOTREC).HasMaxLength(255);

                entity.Property(e => e.NOME_DO_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("NOME DO CLIENTE");

                entity.Property(e => e.NOTA_FISCAL)
                    .HasMaxLength(255)
                    .HasColumnName("NOTA FISCAL");

                entity.Property(e => e.NUMERO_DO_PEDIDO)
                    .HasMaxLength(255)
                    .HasColumnName("NUMERO DO PEDIDO");

                entity.Property(e => e.Nº_DE_SÉRIE)
                    .HasMaxLength(255)
                    .HasColumnName("Nº DE SÉRIE");

                entity.Property(e => e.Nº_DOC_EST)
                    .HasMaxLength(255)
                    .HasColumnName("Nº DOC EST");

                entity.Property(e => e.ORDEM).HasMaxLength(255);

                entity.Property(e => e.ORDEM_VEND)
                    .HasMaxLength(255)
                    .HasColumnName("ORDEM VEND");

                entity.Property(e => e.ORGV).HasMaxLength(255);

                entity.Property(e => e.QTDE_FATURADA).HasColumnName("QTDE FATURADA");

                entity.Property(e => e.RECEITA_BRUTA).HasColumnName("RECEITA BRUTA");

                entity.Property(e => e.RECEITA_LÍQUIDA).HasColumnName("RECEITA LÍQUIDA");

                entity.Property(e => e.SETOR_ATIVIDADE)
                    .HasMaxLength(255)
                    .HasColumnName("SETOR ATIVIDADE");

                entity.Property(e => e.TAXA_ICMS).HasColumnName("TAXA ICMS");

                entity.Property(e => e.TPOV).HasMaxLength(255);

                entity.Property(e => e.TPPED).HasMaxLength(255);

                entity.Property(e => e.UF_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("UF CLIENTE");

                entity.Property(e => e.UTIL).HasMaxLength(255);

                entity.Property(e => e.VALOR_NF).HasColumnName("VALOR NF");
            });

            modelBuilder.Entity<fat_SET_>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("fat_SET_");

                entity.Property(e => e.CENT).HasMaxLength(255);

                entity.Property(e => e.CENTRO_DE_CUSTO)
                    .HasMaxLength(255)
                    .HasColumnName("CENTRO DE CUSTO");

                entity.Property(e => e.COND_PGT)
                    .HasMaxLength(255)
                    .HasColumnName("COND PGT");

                entity.Property(e => e.CPF_CNPJ)
                    .HasMaxLength(255)
                    .HasColumnName("CPF/CNPJ");

                entity.Property(e => e.CRIADO_POR)
                    .HasMaxLength(255)
                    .HasColumnName("CRIADO POR");

                entity.Property(e => e.DATA_FORM).HasColumnType("datetime");

                entity.Property(e => e.DATA_NF)
                    .HasMaxLength(255)
                    .HasColumnName("DATA NF");

                entity.Property(e => e.DESCRIÇÃO).HasMaxLength(255);

                entity.Property(e => e.DESCRIÇÃO_DA_OV)
                    .HasMaxLength(255)
                    .HasColumnName("DESCRIÇÃO DA OV");

                entity.Property(e => e.FORMA_PGT)
                    .HasMaxLength(255)
                    .HasColumnName("FORMA PGT");

                entity.Property(e => e.GRUPO_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("GRUPO CLIENTE");

                entity.Property(e => e.MARGEM_BRUTA).HasColumnName("MARGEM BRUTA");

                entity.Property(e => e.MATERIAL).HasMaxLength(255);

                entity.Property(e => e.MESANO).HasMaxLength(255);

                entity.Property(e => e.MES_ANO_CRIAÇÃO_FATURA).HasMaxLength(255);

                entity.Property(e => e.NOME_DO_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("NOME DO CLIENTE");

                entity.Property(e => e.Nº_DE_SÉRIE)
                    .HasMaxLength(255)
                    .HasColumnName("Nº DE SÉRIE");

                entity.Property(e => e.ORDEM).HasMaxLength(255);

                entity.Property(e => e.ORDEM_VEND)
                    .HasMaxLength(255)
                    .HasColumnName("ORDEM VEND");

                entity.Property(e => e.QTDE_FATURADA).HasColumnName("QTDE FATURADA");

                entity.Property(e => e.RECEITA_BRUTA).HasColumnName("RECEITA BRUTA");

                entity.Property(e => e.RECEITA_LÍQUIDA).HasColumnName("RECEITA LÍQUIDA");

                entity.Property(e => e.TPOV).HasMaxLength(255);

                entity.Property(e => e.TPPED).HasMaxLength(255);

                entity.Property(e => e.UF_CLIENTE)
                    .HasMaxLength(255)
                    .HasColumnName("UF CLIENTE");

                entity.Property(e => e.VALOR_NF).HasColumnName("VALOR NF");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}